
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
<link id="theme-style" rel="stylesheet" href="/stylesheets/main.css">
<link href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css" rel="stylesheet">
<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
<link rel="stylesheet" href="/stylesheets/styles.main.css">
<link rel="shortcut icon" href="/images/icons/icon.png"> 
<meta property="og:locale" content="ar-IQ"/>
<meta name="description" content="يمكنك معرف اقرب منفذ زين كاش عليك من خلال صفحتنا">
<meta name="keywords" content="">
<!--<meta name="theme-color" content="#2196F3"/>-->
<meta name="apple-mobile-web-app-capable" content="yes">
<link rel="manifest" href="/manifest.json">

    <style media="screen" type="text/css">
      .layer1_class { position: absolute; z-index: 1; visibility: visible; }
      .layer2_class { /*position: absolute; z-index: 2; top: 10px; left: 10px; */visibility: hidden }
    </style>
    <script>
      function downLoad(){
        if (document.all){
          setTimeout(() => {   
            document.all["layer1"].style.visibility="hidden";
            document.all["layer2"].style.visibility="visible";
            document.body.style.backgroundImage = "inherit"
          },1000*5)
        } else if (document.getElementById){
          //setTimeout(() => { 
           // node = document.getElementById("layer1").style.visibility='hidden';
            document.body.style.backgroundImage = "inherit";
            document.body.style.backgroundColor = "#131b21";
            document.getElementById("layer2").style.visibility='visible';
            
         // },1000*500)
        }
      }
      
    </script>
<script src="/javascripts/script.js"></script>
<script src="https://momentjs.com/downloads/moment.js"></script>
<script src="https://momentjs.com/downloads/moment-with-locales.min.js"></script>
<script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
<script src="https://kit.fontawesome.com/72111503dd.js" crossorigin="anonymous"></script>

   <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin=""/> 
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>


<script type="text/javascript">
  if ('serviceWorker' in navigator) {
    window.addEventListener('load', function() {
      navigator.serviceWorker.register('/service-worker.js').then(function(registration) {
        console.log('Service worker registered with scope: ', registration.scope);
      }, function(err) {
        console.log('Service worker registration failed: ', err);
      });
    });
  }
</script>
<script>
  // Get the modal
  var modal = document.getElementById('id01');
  var login = document.getElementById('formlogin');
  
  // When the user clicks anywhere outside of the modal, close it
  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  }

  </script>

  <script>

const successCallback = (position) => {
  const crd = position.coords;
  console.log("Your current position is:");
  console.log(`Latitude : ${crd.latitude}`);
  console.log(`Longitude: ${crd.longitude}`);
  console.log(`More or less ${crd.accuracy} meters.`);
  localStorage.setItem("MyLocation",JSON.stringify({
  timestamp: position.timestamp,
  latitude: crd.latitude,
  longitude: crd.longitude,
  accuracy: crd.accuracy
}));
var accuracy = position.coords.accuracy;
if (accuracy <= 100) {
  console.log("الموقع صحيح.");
} else {
  console.log("الموقع مُشتبه فيه.");
}
};

var myLocation = {
  latitude: 33.30975352786081,//33.3689417,
  longitude: 44.44083836465522//44.3080252

};

var regions = [
  { name: 'الحرية', latitude: 33.3606472, longitude: 44.32844563 },
  { name: 'الحارثية', latitude: 33.2912893, longitude: 44.35186980 },
  { name: 'الطوبجي', latitude: 33.3247609, longitude: 44.34661644 },
  { name: 'المنصور', latitude: 33.3124569, longitude: 44.32413595 }
];

function getNearestRegion(myLocation, regions) {
  var nearestRegion = null;
  var nearestDistance = Infinity;

  // حساب المسافة بين إحداثيات myLocation وإحداثيات كل مناطق regions
  for (var i = 0; i < regions.length; i++) {
    var region = regions[i];
    var distance = getDistance(myLocation.latitude, myLocation.longitude, region.latitude, region.longitude);

    // إذا كانت المسافة أقل من المسافة المحفوظة، قم بتحديث القيم
    if (distance < nearestDistance) {
      nearestRegion = region;
      nearestDistance = distance;
    }
  }

  return nearestRegion;
}

// دالة لحساب المسافة بين إحداثيات اثنين من النقاط باستخدام الصيغة الهرمية
function getDistance(lat1, lon1, lat2, lon2) {
  var R = 6371; // نصف قطر الأرض بالكيلومترات
  var dLat = degToRad(lat2 - lat1);
  var dLon = degToRad(lon2 - lon1);
  var a =
    Math.sin(dLat / 2) * Math.sin(dLat / 2) +
    Math.cos(degToRad(lat1)) * Math.cos(degToRad(lat2)) *
    Math.sin(dLon / 2) * Math.sin(dLon / 2);
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  var distance = R * c;

  return distance;
}

// دالة لتحويل الدرجات إلى راديان
function degToRad(deg) {
  return deg * (Math.PI / 180);
}

// استدعاء الدالة والحصول على المنطقة الأقرب
var nearestRegion = getNearestRegion(myLocation, regions);
console.log("المنطقةالأقرب هي: " + nearestRegion.name);




const errorCallback = (error) => {
    switch(error.code) {
    case error.PERMISSION_DENIED:
      console.log("User denied the request for Geolocation.")

      break;
    case error.POSITION_UNAVAILABLE:
      console.log("Location information is unavailable.")
      break;
    case error.TIMEOUT:
      console.log("The request to get user location timed out")
      break;
    case error.UNKNOWN_ERROR:
      console.log("An unknown error occurred.")
      break;
  }
};
setInterval(function() {
navigator.geolocation.getCurrentPosition(successCallback, errorCallback,{
  enableHighAccuracy: true,
  timeout: 5000,
  maximumAge: 0,
});
}, 5000)


function SelectContribution(params) {
   if (params === "zincash") return location.assign(location.href+"/zincash");
   if (params === "obstruction") return location.assign(location.href+"/obstruction");
   return location.assign("/contribution")
}
  </script>

<!-- start webpushr tracking code --> 
<script>(function(w,d, s, id) {if(typeof(w.webpushr)!=='undefined') return;w.webpushr=w.webpushr||function(){(w.webpushr.q=w.webpushr.q||[]).push(arguments)};var js, fjs = d.getElementsByTagName(s)[0];js = d.createElement(s); js.id = id;js.async=1;js.src = "https://cdn.webpushr.com/app.min.js";
  fjs.parentNode.appendChild(js);}(window,document, 'script', 'webpushr-jssdk'));
  webpushr('setup',{'key':'BFDn29ejJvfgrNgZ4OY1RKrBOfnvRTIUvUyWTztejGSrRKREIczbA_beOgjGlg09tddazJLR4o_OZnYyxOF-gN8' });</script>
  <!-- end webpushr tracking code -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>